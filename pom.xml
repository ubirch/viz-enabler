<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- info -->
    <groupId>com.ubirch.viz</groupId>
    <artifactId>viz-enabler</artifactId>
    <version>0.1.1</version>
    <packaging>jar</packaging>

    <organization>
        <name>ubirch GmbH</name>
        <url>https://ubirch.com/</url>
    </organization>

    <developers>
        <developer>
            <name>Benoit George</name>
            <email>benoit.george@ubirch.com</email>
            <organization>ubirch GmbH</organization>
            <organizationUrl>https://ubirch.com/</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/ubirch/ubirch-id-service.git</connection>
        <developerConnection>scm:git:git@github.com:ubirch/ubirch/ubirch-id-service.git</developerConnection>
        <url>https://github.com/ubirch/ubirch-id-service.git</url>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <repositories>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </repository>
    </repositories>


    <properties>
        <build.number>${timestamp}-dev</build.number>

        <maven.deploy.skip>true</maven.deploy.skip>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>


        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>

        <encoding>UTF-8</encoding>


        <!-- versions -->

        <!-- Scala -->
        <scala.major.version>2.12</scala.major.version>
        <scala.minor.version>.6</scala.minor.version>
        <scala.version>${scala.major.version}${scala.minor.version}</scala.version>
        <scala.compat.version>2.12</scala.compat.version>
        <scala-maven-plugin.version>3.4.2</scala-maven-plugin.version>
        <maven-jar-plugin.version>2.6</maven-jar-plugin.version>


        <typesafe.config.version>1.3.4</typesafe.config.version>

        <!-- Scalatra -->
        <scalatra.version>2.6.5</scalatra.version>
        <scalactic.version>3.0.5</scalactic.version>
        <scalatraSwagger.version>2.6.5</scalatraSwagger.version>

        <!-- Json -->
        <json4s.version>3.6.9</json4s.version> <!-- Scalatra DOES NOT work with a json4s prior to 3.6.7 -->

        <!-- Logging -->
        <scala.logging.version>3.9.0</scala.logging.version>
        <scala-logging.version>3.9.2</scala-logging.version>
        <slf4j.api.version>1.7.15</slf4j.api.version>
        <logback-classic.version>1.2.3</logback-classic.version>
        <log4j-over-slf4j.version>1.7.25</log4j-over-slf4j.version>
        <jcl-over-slf4j.version>1.7.25</jcl-over-slf4j.version>
        <logstash-logback-encoder.version>5.3</logstash-logback-encoder.version>

        <!-- Testing -->
        <scalatest.version>2.6.5</scalatest.version>
        <testcontainer.version>1.14.3</testcontainer.version>

        <!-- Elasticsearch -->
        <elasticsearch.version>7.8.1</elasticsearch.version>

        <!-- plugins -->
        <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
        <scalariform.version>0.2.2</scalariform.version>
        <!-- /plugins -->
        <msgpack-scala_2.12.version>0.8.13</msgpack-scala_2.12.version>
        <ubirch-crypto.version>2.1.0</ubirch-crypto.version>

        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <dockerfile-maven-plugin.version>1.4.4</dockerfile-maven-plugin.version>

        <jetty-servlets.version>9.4.40.v20210413</jetty-servlets.version>

        <guice.version>4.1.0</guice.version>

    </properties>



    <dependencies>

        <!-- Scala -->

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging_${scala.major.version}</artifactId>
            <version>${scala-logging.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>${typesafe.config.version}</version>
        </dependency>

        <!-- Scala -->


        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.api.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.slf4j/log4j-over-slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${log4j-over-slf4j.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${jcl-over-slf4j.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/net.logstash.logback/logstash-logback-encoder -->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback-encoder.version}</version>
        </dependency>

        <!-- /Logging -->

        <!-- Scalatra -->

        <dependency>
            <groupId>org.scalatra</groupId>
            <artifactId>scalatra_2.12</artifactId>
            <version>${scalatra.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scalactic</groupId>
            <artifactId>scalactic_${scala.compat.version}</artifactId>
            <version>${scalactic.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scalatra</groupId>
            <artifactId>scalatra-swagger_${scala.compat.version}</artifactId>
            <version>${scalatraSwagger.version}</version>
        </dependency>

        <!-- Json4s -->
        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-native_${scala.compat.version}</artifactId>
            <version>${json4s.version}</version>
        </dependency>

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-jackson_${scala.compat.version}</artifactId>
            <version>${json4s.version}</version>
        </dependency>

        <!-- msgPack -->
        <dependency>
            <groupId>org.msgpack</groupId>
            <artifactId>msgpack-scala_${scala.compat.version}</artifactId>
            <version>${msgpack-scala_2.12.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.ubirch/ubirch-crypto -->
        <dependency>
            <groupId>com.ubirch</groupId>
            <artifactId>ubirch-crypto</artifactId>
            <version>${ubirch-crypto.version}</version>
        </dependency>


        <!-- Test -->
        <dependency>
            <groupId>org.scalatra</groupId>
            <artifactId>scalatra-scalatest_${scala.compat.version}</artifactId>
            <version>${scalatest.version}</version>
        </dependency>


        <!-- Jetty servlet -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlets</artifactId>
            <version>${jetty-servlets.version}</version>
        </dependency>
        <!-- /Jetty servlet -->

        <!-- Simple HTTP client -->
        <dependency>
            <groupId>org.scalaj</groupId>
            <artifactId>scalaj-http_${scala.compat.version}</artifactId>
            <version>2.4.2</version>
        </dependency>

        <dependency>
            <groupId>com.ubirch</groupId>
            <artifactId>ubirch-client-scala</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <!-- Guice -->
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>${guice.version}</version>
        </dependency>

        <!-- New es dependency -->
        <!-- https://mvnrepository.com/artifact/com.sksamuel.elastic4s/elastic4s-http -->
        <dependency>
            <groupId>com.sksamuel.elastic4s</groupId>
            <artifactId>elastic4s-client-esjava_2.12</artifactId>
            <version>${elasticsearch.version}</version>
        </dependency>

        <dependency>
            <groupId>com.sksamuel.elastic4s</groupId>
            <artifactId>elastic4s-core_2.12</artifactId>
            <version>${elasticsearch.version}</version>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>${testcontainer.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.sksamuel.elastic4s/elastic4s-json4s -->
<!--        <dependency>-->
<!--            <groupId>com.sksamuel.elastic4s</groupId>-->
<!--            <artifactId>elastic4s-json4s_2.12</artifactId>-->
<!--            <version>7.8.1</version>-->
<!--        </dependency>-->

        <!-- Needed otherwise it creates incompatibility between jackson versions being used -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.11.1</version>
        </dependency>

    </dependencies>



    <build>
        <plugins>


            <!-- scala compiler -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <recompileMode>incremental</recompileMode>
                    <args>
                        <arg>-deprecation</arg>                      <!--  Emit warning and location for usages of deprecated APIs. -->
                        <arg>-encoding</arg> <arg>utf-8</arg>        <!--  Specify character encoding used by source files. -->
                        <arg>-explaintypes</arg>                     <!--  Explain type errors in more detail. -->
                        <arg>-feature</arg>                          <!--  Emit warning and location for usages of features that should be imported explicitly. -->
                        <arg>-unchecked</arg>                        <!--  Enable additional warnings where generated code depends on assumptions. -->
                        <arg>-Xcheckinit</arg>                       <!--  Wrap field accessors to throw an exception on uninitialized access. -->
                        <arg>-Xfuture</arg>                          <!--  Turn on future language features. -->
                        <arg>-Xlint:adapted-args</arg>               <!--  Warn if an argument list is modified to match the receiver. -->
                        <arg>-Xlint:by-name-right-associative</arg>  <!--  By-name parameter of right associative operator. -->
                        <arg>-Xlint:constant</arg>                   <!--  Evaluation of a constant arithmetic expression results in an error. -->
                        <arg>-Xlint:delayedinit-select</arg>         <!--  Selecting member of DelayedInit. -->
                        <arg>-Xlint:doc-detached</arg>               <!--  A Scaladoc comment appears to be detached from its element. -->
                        <arg>-Xlint:inaccessible</arg>               <!--  Warn about inaccessible types in method signatures. -->
                        <arg>-Xlint:infer-any</arg>                  <!--  Warn when a type argument is inferred to be `Any`. -->
                        <arg>-Xlint:missing-interpolator</arg>       <!--  A string literal appears to be missing an interpolator id. -->
                        <arg>-Xlint:nullary-override</arg>           <!--  Warn when non-nullary `def f()' overrides nullary `def f'. -->
                        <arg>-Xlint:nullary-unit</arg>               <!--  Warn when nullary methods return Unit. -->
                        <arg>-Xlint:option-implicit</arg>            <!--  Option.apply used implicit view. -->
                        <arg>-Xlint:package-object-classes</arg>     <!--  Class or object defined in package object. -->
                        <arg>-Xlint:poly-implicit-overload</arg>     <!--  Parameterized overloaded implicit methods are not visible as view bounds. -->
                        <arg>-Xlint:private-shadow</arg>             <!--  A private field (or class parameter) shadows a superclass field. -->
                        <arg>-Xlint:stars-align</arg>                <!--  Pattern sequence wildcard must align with sequence component. -->
                        <arg>-Xlint:type-parameter-shadow</arg>      <!--  A local type parameter shadows a type already in scope. -->
                        <arg>-Xlint:unsound-match</arg>              <!--  Pattern match may not be typesafe. -->
                        <arg>-Yno-adapted-args</arg>                 <!--  Do not adapt an argument list (either by inserting () or creating a tuple) to match the receiver. -->
                        <arg>-Ypartial-unification</arg>             <!--  Enable partial unification in type constructor inference -->
                        <arg>-Ywarn-dead-code</arg>                  <!--  Warn when dead code is identified. -->
                        <arg>-Ywarn-extra-implicit</arg>             <!--  Warn when more than one implicit parameter section is defined. -->
                        <arg>-Ywarn-inaccessible</arg>               <!--  Warn about inaccessible types in method signatures. -->
                        <arg>-Ywarn-infer-any</arg>                  <!--  Warn when a type argument is inferred to be `Any`. -->
                        <arg>-Ywarn-nullary-override</arg>           <!--  Warn when non-nullary `def f()' overrides nullary `def f'. -->
                        <arg>-Ywarn-nullary-unit</arg>               <!--  Warn when nullary methods return Unit. -->
                        <arg>-Ywarn-numeric-widen</arg>              <!--  Warn when numerics are widened. -->
                        <arg>-Ywarn-unused:implicits</arg>           <!--  Warn if an implicit parameter is unused. -->
                        <arg>-Ywarn-unused:imports</arg>             <!--  Warn if an import selector is not referenced. -->
                        <arg>-Ywarn-unused:locals</arg>              <!--  Warn if a local definition is unused. -->
                        <arg>-Ywarn-unused:params</arg>              <!--  Warn if a value parameter is unused. -->
                        <arg>-Ywarn-unused:patvars</arg>             <!--  Warn if a variable bound in a pattern is unused. -->
                        <arg>-Ywarn-unused:privates</arg>            <!--  Warn if a private member is unused. -->
                        <arg>-Ywarn-value-discard</arg>              <!--  Warn when non-Unit expression results are unused. -->
                        <arg>-feature</arg>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <arg>-dependencyfile</arg>
                        <arg>${project.build.directory}/.scala_dependencies</arg>
                    </args>
                </configuration>
            </plugin>

            <!-- disable surefire -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <!-- enable scalatest -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>1.3</version>
                <executions>
                    <execution>
                        <id>attach-licenses</id>
                        <goals>
                            <goal>add-third-party</goal>
                        </goals>
                        <configuration>
                            <thirdPartyFilename>licenses.txt</thirdPartyFilename>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <id>verify-scala-style</id>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--<skip>true</skip>-->
                    <verbose>false</verbose>
                    <failOnViolation>true</failOnViolation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <failOnWarning>false</failOnWarning>
                    <sourceDirectory>${project.basedir}/src/main/scala</sourceDirectory>
                    <testSourceDirectory>${project.basedir}/src/test/scala</testSourceDirectory>
                    <configLocation>
                        https://raw.githubusercontent.com/ubirch/ubirch-codestyle/master/ubirch-scalastyle.xml
                    </configLocation>
                    <outputEncoding>UTF-8</outputEncoding>
                </configuration>
            </plugin>


            <!-- code formatting -->
            <plugin>
                <groupId>com.github.tashoyan</groupId>
                <artifactId>scalariform-maven-plugin</artifactId>
                <version>${scalariform.version}</version>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <configuration>
                            <firstArgumentOnNewline>Force</firstArgumentOnNewline>
                            <firstParameterOnNewline>Force</firstParameterOnNewline>
                            <allowParamGroupsOnNewlines>true</allowParamGroupsOnNewlines>
                            <danglingCloseParenthesis>Force</danglingCloseParenthesis>
                            <doubleIndentConstructorArguments>true</doubleIndentConstructorArguments>
                            <doubleIndentMethodDeclaration>true</doubleIndentMethodDeclaration>
                            <newlineAtEndOfFile>true</newlineAtEndOfFile>
                            <placeScaladocAsterisksBeneathSecondAsterisk>true
                            </placeScaladocAsterisksBeneathSecondAsterisk>
                            <singleCasePatternOnNewline>false</singleCasePatternOnNewline>
                            <spacesAroundMultiImports>true</spacesAroundMultiImports>
                            <rewriteArrowSymbols>false</rewriteArrowSymbols>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- code formatting -->


            <!-- copy all dependencies into the target/lib dir for our docker image -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.ubirch.viz.Service</mainClass>
                            <useUniqueVersions>false</useUniqueVersions>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- for mvn deploy to work, disable the default deploy plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- create and/or push the created docker image -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <buildDirectory>${project.build.outputDirectory}</buildDirectory>
                    <repository>ubirch/viz-enabler-server</repository>
                    <tag>${build.number}</tag>
                    <buildArgs>
                        <VERSION>${project.version}</VERSION>
                        <BUILD>${build.number}</BUILD>
                        <SERVICE_NAME>${project.name}</SERVICE_NAME>
                        <JAR_LIBS>target/lib</JAR_LIBS>
                        <SWAGGER_UI>src/main/swagger-ui</SWAGGER_UI>
                        <JAR_FILE>target/${project.build.finalName}.${project.packaging}</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>

        </plugins>


    </build>


</project>
